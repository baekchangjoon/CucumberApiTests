<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="
           http://maven.apache.org/POM/4.0.0
           https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.example</groupId>
  <artifactId>ApiTest</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>jar</packaging>

  <properties>
    <!-- Java 버전 -->
    <maven.compiler.source>11</maven.compiler.source>
    <maven.compiler.target>11</maven.compiler.target>
    <!-- JUnit / Cucumber 버전 -->
    <junit.version>4.13.2</junit.version>
    <cucumber.version>7.11.2</cucumber.version>
    <!-- 기본 인코딩 -->
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>

  <dependencies>
    <dependency>
      <groupId>info.picocli</groupId>
      <artifactId>picocli</artifactId>
      <version>4.7.4</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <version>2.18.2</version>
    </dependency>
    <dependency>
      <groupId>org.wiremock</groupId>
      <artifactId>wiremock</artifactId>
      <version>3.10.0</version>
    </dependency>
    <dependency>
      <groupId>mysql</groupId>
      <artifactId>mysql-connector-java</artifactId>
      <version>8.0.31</version>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>com.zaxxer</groupId>
      <artifactId>HikariCP</artifactId>
      <version>5.0.1</version>
    </dependency>

    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <version>5.15.2</version>
      <scope>test</scope>
    </dependency>

    <!-- JUnit -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>

    <!-- Cucumber (Java / JUnit) -->
    <dependency>
      <groupId>io.cucumber</groupId>
      <artifactId>cucumber-java</artifactId>
      <version>${cucumber.version}</version>
    </dependency>
    <dependency>
      <groupId>io.cucumber</groupId>
      <artifactId>cucumber-junit</artifactId>
      <version>${cucumber.version}</version>
    </dependency>

    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <version>2.3.232</version>
    </dependency>
  </dependencies>

  <build>
    <plugins>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>3.2.2</version> <!-- 최신 버전 확인 필요 -->
        <configuration>
          <archive>
            <manifest>
              <!-- 실행 시 사용할 메인 클래스 -->
              <mainClass>com.example.CucumberApiTests</mainClass>
            </manifest>
          </archive>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <version>3.3.0</version> <!-- (버전은 상황에 맞게 최신으로) -->
        <executions>
          <execution>
            <!-- 패키징 단계에서 실행 -->
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
            <configuration>
              <!-- (선택) 원본 POM 대신 의존성을 줄인 POM을 만드는 기능 비활성화 -->
              <createDependencyReducedPom>false</createDependencyReducedPom>

              <!-- Main-Class를 지정하여 실행 가능한 JAR로 만듦 -->
              <transformers>
                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                  <mainClass>com.example.CucumberApiTests</mainClass>
                </transformer>
              </transformers>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- (1) 컴파일러 플러그인: Java 11 설정 -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.8.1</version>
        <configuration>
          <source>${maven.compiler.source}</source>
          <target>${maven.compiler.target}</target>
        </configuration>
      </plugin>

      <!-- (2) build-helper-maven-plugin: src/cucumber/java 를 테스트 소스 경로로 추가 -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>3.3.0</version>
        <executions>
          <execution>
            <id>add-cucumber-test-source</id>
            <phase>generate-test-sources</phase>
            <goals>
              <goal>add-test-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>src/cucumber/java</source>
              </sources>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- (3) maven-resources-plugin: src/cucumber/resources/features 폴더의 .feature 파일들을 테스트 리소스로 복사 -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <version>3.2.0</version>
        <executions>
          <execution>
            <id>copy-cucumber-features</id>
            <phase>process-test-resources</phase>
            <goals>
              <goal>resources</goal>
            </goals>
            <configuration>
              <resources>
                <resource>
                  <directory>src/cucumber/resources</directory>
                  <includes>
                    <include>**/*.feature</include>
                  </includes>
                </resource>
              </resources>
              <!-- target/test-classes 하위에 복사 -->
              <outputDirectory>${project.build.directory}/test-classes</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- (4) Surefire Plugin: 일반 단위테스트(*Test.java) 만 test 페이즈에 실행 -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>3.0.0-M7</version>
        <configuration>
          <includes>
            <!-- 예: *Test.java 만 실행 -->
            <include>**/*Test.java</include>
          </includes>
        </configuration>
      </plugin>

      <!-- (5) Failsafe Plugin: 통합테스트(*IT.java) 는 integration-test/verify 페이즈에 실행 -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>3.0.0-M7</version>
        <executions>
          <execution>
            <id>integration-tests</id>
            <phase>integration-test</phase>
            <goals>
              <goal>integration-test</goal>
            </goals>
            <configuration>
              <parallel>methods</parallel>
              <threadCount>4</threadCount>
            </configuration>
          </execution>
          <execution>
            <id>verify</id>
            <phase>verify</phase>
            <goals>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <includes>
            <!-- *IT.java 패턴의 파일만 통합테스트로 실행 -->
            <include>**/*IT.java</include>
          </includes>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>
